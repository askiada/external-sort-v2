// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/askiada/external-sort-v2/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockChunksMerger is an autogenerated mock type for the ChunksMerger type
type MockChunksMerger struct {
	mock.Mock
}

// Merge provides a mock function with given fields: ctx, chunks
func (_m *MockChunksMerger) Merge(ctx context.Context, chunks []model.Reader) (model.Reader, error) {
	ret := _m.Called(ctx, chunks)

	if len(ret) == 0 {
		panic("no return value specified for Merge")
	}

	var r0 model.Reader
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []model.Reader) (model.Reader, error)); ok {
		return rf(ctx, chunks)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []model.Reader) model.Reader); ok {
		r0 = rf(ctx, chunks)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.Reader)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []model.Reader) error); ok {
		r1 = rf(ctx, chunks)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockChunksMerger creates a new instance of MockChunksMerger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChunksMerger(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChunksMerger {
	mock := &MockChunksMerger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
