// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/askiada/external-sort-v2/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockWriter is an autogenerated mock type for the Writer type
type MockWriter struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockWriter) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Write provides a mock function with given fields: ctx, rdr
func (_m *MockWriter) Write(ctx context.Context, rdr model.Reader) error {
	ret := _m.Called(ctx, rdr)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Reader) error); ok {
		r0 = rf(ctx, rdr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteRow provides a mock function with given fields: ctx, row
func (_m *MockWriter) WriteRow(ctx context.Context, row interface{}) error {
	ret := _m.Called(ctx, row)

	if len(ret) == 0 {
		panic("no return value specified for WriteRow")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) error); ok {
		r0 = rf(ctx, row)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockWriter creates a new instance of MockWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWriter {
	mock := &MockWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
